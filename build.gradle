plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
}

group 'com.alenashomanova'
version '1.0-SNAPSHOT'

def allureVersion = "2.19.0"

repositories {
    mavenCentral()
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:6.12.2",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.8.2",
            "com.github.javafaker:javafaker:1.0.2",
            "org.slf4j:slf4j-simple:2.0.7")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}


task registration_test(type: Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}

task remote_test(type: Test) {
    useJUnitPlatform {
        includeTags("Remote")
    }
}

task many_properties_test(type: Test) {
    useJUnitPlatform {
        includeTags("many_properties")
    }
}